{{ if eq .chezmoi.os "windows" -}}
#Requires -RunAsAdministrator

echo '$ENV:ChocolateyInstall', $ENV:ChocolateyInstall
Import-Module $ENV:ChocolateyInstall/helpers/chocolateyProfile.psm1; refreshenv

# Chocolatey
{{ range .software.choco -}}
{{ if get . "name" | empty | not -}} choco install {{ .name }} {{- if get . "params" | empty | not }} --params {{ .params | squote | quote }} {{- end }} -y {{- end}}
{{ end -}}

# Winget
{{ range .software.winget -}}
{{ if get . "name" | empty | not -}} winget install {{ .name }} {{- if get . "source" | empty | not }} --source {{ .source }} {{- end}} --accept-source-agreements --accept-package-agreements {{- end}}
{{ end -}}
{{ end }}

Import-Module $ENV:ChocolateyInstall/helpers/chocolateyProfile.psm1; refreshenv
# Python modules
if ((Get-Command pip).Source){
    {{ range .python.pip -}}
    {{ if get . "name" | empty | not -}} pip install {{ .name }} {{- end}}
    {{ end }}
}

# Nodejs
if ((Get-Command fnm).Source){
fnm env --use-on-cd | Out-String | Invoke-Expression
{{- range .fnm}}
    {{- if get . "node_version" | empty | not}}
        fnm install {{ .node_version }}
        fnm use {{ .node_version }}
            {{ if get . "global_modules" | empty | not}}
            {{- range .global_modules}}
                {{- if get . "name" | empty | not -}} Write-Host {{ .name | squote }}; npm install -g {{ .name }}{{end}}
            {{ end -}}
        {{- end -}}
    {{- end -}}
{{- end -}}
}
{{ range .powershell}}
{{- if get . "name" | empty | not }}
PowerShellGet\Install-Module {{ .name }} -Scope CurrentUser -Force
{{- end}}

{{- end -}}